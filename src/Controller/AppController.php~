<?php
/**
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link      http://cakephp.org CakePHP(tm) Project
 * @since     0.2.9
 * @license   http://www.opensource.org/licenses/mit-license.php MIT License
 */
namespace App\Controller;

use Cake\Datasource\ConnectionManager;
use Cake\Controller\Controller;
use Cake\Event\Event;
use Cake\Utility\Security;
/**
 * Application Controller
 *
 * Add your application-wide methods in the class below, your controllers
 * will inherit them.
 *
 * @link http://book.cakephp.org/3.0/en/controllers.html#the-app-controller
 */
class AppController extends Controller
{
     var $helpers=['Html'];

    /**
     * Initialization hook method.
     *
     * Use this method to add common initialization code like loading components.
     *
     * @return void
     */
    public function initialize()
    {
        parent::initialize();
        $this->loadComponent('Flash');
        //$this->loadComponent('Csrf', ['secure' => true]);
        $this->loadComponent('Cookie');
        $this->loadComponent('Auth', [
                              'authorize'=> 'Controller',//added this line
                              'authenticate' => [
                              'Form' => [
                                        'fields' => [
                                                       'username' => 'username',
                                                       'password' => 'password'
                                                    ]
                                        ,
                                        'scope' => [
                                                       'Users.is_active'=>1,
                                                       'Users.is_deleted'=>0
                                   
                                                    ]
                                        ]
                                ],
                                'loginAction' => [
                                'controller' => 'Users',
                                'action' => 'index'
                                ],

                            'unauthorizedRedirect' => $this->referer()
        ]);
    }
    
    public function beforeFilter(Event $event){
        parent::beforeFilter($event);
        
        $session = $this->request->session();
        $uri=$_SERVER['REQUEST_URI']; //// uri defined 
             
        if (strpos($uri,'administrator') !== false) {
            if($session->check('admin.details')){
                define('TYPE','ADMIN');
                $this->layout='admin';                      
            }else{
                define('TYPE','ADMIN');
                $this->layout='admin_login';
            }
        }
        else
        {
            define('TYPE','FRONT');
            $this->layout='frontend';
        }
        $this->set('authors',array('UNIFIED INFOTECH PVT. LTD.'));
        
    }
    
    public function is_admin_logged(){
        $session = $this->request->session();
        if($session->check('admin.details')){
            return 1;
        }else{
            return 0;
        }
    }

    public function hasAccess($usersId,$moduleId,$methodName){
        $connection = ConnectionManager::get('default');        
        $sqlUser = "SELECT * FROM `users` WHERE `id`='".$usersId."'";
        $usersDetls = $connection->execute($sqlUser)->fetchAll('assoc');        
        $sqlModulePermissions = "SELECT * FROM `module_permissions` "
                . "WHERE `roleId`='".$usersDetls[0]['userRoles']."'"
                . "AND `moduleId`='".$moduleId."'";
        $modulePermissionDetls = $connection->execute($sqlModulePermissions)->fetchAll('assoc');  
        if(isset($modulePermissionDetls[0][$methodName])){
            return $modulePermissionDetls[0][$methodName];  
        }else{
            return "0";
        }
    }
}
